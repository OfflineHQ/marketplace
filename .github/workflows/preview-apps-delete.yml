name: Delete preview apps

on:
  pull_request:
    types: [closed]
  workflow_dispatch:

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  delete-preview:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Get PR sha
        id: get_pull_request_sha
        run: |
          pull_request_sha=$(jq --raw-output .pull_request.base.sha "$GITHUB_EVENT_PATH" | cut -c1-8)
          echo "PULL_REQUEST_SHA=$pull_request_sha" >> $GITHUB_ENV

      # - name: Delete Hasura Cloud Preview App
      #   uses: hasura/hasura-cloud-preview-apps@v0.1.5
      #   with:
      #     name: 'marketplace-${{github.event.number}}'
      #     delete: true
      #   env:
      #     GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}} # ${{ secrets.GITHUB_TOKEN }} is provided by default by GitHub actions
      #     HASURA_CLOUD_ACCESS_TOKEN: ${{secrets.HASURA_CLOUD_ACCESS_TOKEN}} # Hasura Cloud access token to contact Hasura Cloud APIs

      - name: Delete Neon Branch
        uses: neondatabase/delete-branch-by-name-action@main
        with:
          project_id: ${{ secrets.NEON_PROJECT_ID }}
          branch_name: ${{ env.PULL_REQUEST_SHA }}
          api_key: ${{ secrets.NEON_API_KEY }}

      - name: Download PREVIEW_URL cache
        uses: actions/cache@v3
        id: cache-preview-url
        with:
          path: ./preview_url.txt
          key: preview-url-${{ env.PULL_REQUEST_SHA }}

      - name: Get PREVIEW_URL from cache
        id: get_preview_url
        run: |
          preview_url=$(cat preview_url.txt)
          echo "PREVIEW_URL=$preview_url" >> $GITHUB_ENV

      - name: Cache Vercel CLI
        uses: actions/cache@v2
        id: cache-vercel
        with:
          path: ~/.npm # adjust this path if needed
          key: vercel-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}

      - name: Install Vercel CLI
        run: |
          if [ -z "$(npm list -g --depth=0 | grep vercel)" ]
          then
            npm install --global vercel@latest
          fi

      - name: Delete Vercel Preview
        run: vercel remove [${{ env.PREVIEW_URL }}] --yes --token ${{ secrets.VERCEL_TOKEN }}

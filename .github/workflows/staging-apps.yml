name: Deploy staging apps

on:
  push:
    branches:
      - staging
  workflow_dispatch:

jobs:
  deploy-staging:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: ['web', 'back-office']
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ matrix.app == 'web' && secrets.VERCEL_PROJECT_ID_WEB || secrets.VERCEL_PROJECT_ID_BACK_OFFICE }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up environment and cache dependencies
        uses: sebpalluel/ci/.github/actions/setup-environment@latest

      - name: Cache Vercel CLI
        uses: actions/cache@v2
        id: cache-vercel
        with:
          path: ~/.npm # adjust this path if needed
          key: vercel-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}

      - name: Install Vercel CLI
        run: |
          if [ -z "$(npm list -g --depth=0 | grep vercel)" ]
          then
            npm install --global vercel@latest
          fi

      # Deploy app
      - name: Check if app should be built
        id: app_check_build
        run: |
          npx --y nx-ignore ${{ matrix.app }}
          echo "build_required_${{ matrix.app }}=$?" >> "$GITHUB_ENV"

      - name: App // Vercel Environment Information
        if: env.branch_required_${{matrix.app}} === '1'
        run: cd apps/${{ matrix.app }} && vercel pull --yes --environment=preview --git-branch=staging --token=${{ secrets.VERCEL_TOKEN }}

      - name: App // Deploy Staging to Vercel
        if: env.branch_required_${{matrix.app}} === '1'
        run: vercel deploy --token=${{ secrets.VERCEL_TOKEN }}

name: Deploy preview apps

on:
  pull_request:
    types: [opened, reopened, synchronize]
  workflow_dispatch:

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  deploy-preview:
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up environment and cache dependencies
        uses: sebpalluel/ci/.github/actions/setup-environment@latest

      - name: Get PR sha
        id: get_pull_request_sha
        run: |
          pull_request_sha=$(jq --raw-output .pull_request.base.sha "$GITHUB_EVENT_PATH" | cut -c1-8)
          echo "PULL_REQUEST_SHA=$pull_request_sha" >> $GITHUB_ENV

      - name: Neon Database Create Branch Action
        uses: neondatabase/create-branch-action@v3
        id: create_branch
        with:
          project_id: ${{ secrets.NEON_PROJECT_ID }}
          branch_name: ${{ env.PULL_REQUEST_SHA }}
          api_key: ${{ secrets.NEON_API_KEY }}
          username: ${{ secrets.PG_USERNAME }}
          password: ${{ secrets.PG_PASSWORD }}

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: Save environment variables to a file
        run: |
          echo "HASURA_CLOUD_ACCESS_TOKEN=$HASURA_CLOUD_ACCESS_TOKEN" >> env_vars.txt
          echo "HASURA_GRAPHQL_ADMIN_SECRET=$HASURA_GRAPHQL_ADMIN_SECRET" >> env_vars.txt
          echo "HYGRAPH_CMS_WEBHOOK_READ_URL=$HYGRAPH_CMS_WEBHOOK_READ_URL" >> env_vars.txt
          echo "HYGRAPH_CMS_READ_TOKEN=$HYGRAPH_CMS_READ_TOKEN" >> env_vars.txt
          echo "HASURA_GRAPHQL_JWT_SECRET=$HASURA_GRAPHQL_JWT_SECRET" >> env_vars.txt
          echo "HASURA_GRAPHQL_DATABASE_URL=$HASURA_GRAPHQL_DATABASE_URL" >> env_vars.txt
        env:
          HASURA_CLOUD_ACCESS_TOKEN: ${{secrets.HASURA_CLOUD_ACCESS_TOKEN}}
          HASURA_GRAPHQL_ADMIN_SECRET: ${{secrets.HASURA_GRAPHQL_ADMIN_SECRET}}
          HYGRAPH_CMS_WEBHOOK_READ_URL: ${{secrets.HYGRAPH_CMS_WEBHOOK_READ_URL}}
          HYGRAPH_CMS_READ_TOKEN: ${{secrets.HYGRAPH_CMS_READ_TOKEN}}
          HASURA_GRAPHQL_JWT_SECRET: ${{secrets.HASURA_GRAPHQL_JWT_SECRET}}
          HASURA_GRAPHQL_DATABASE_URL: ${{steps.create_branch.outputs.db_url}}/neondb

      - name: Upload env_vars.txt as an artifact
        uses: actions/upload-artifact@v2
        with:
          name: env-vars
          path: ./env_vars.txt
          retention-days: 5 # set the retention period to 5 days

      - name: Create Hasura Cloud preview app
        id: hasura_cloud_preview
        uses: hasura/hasura-cloud-preview-apps@v0.1.10
        with:
          name: 'marketplace-${{github.event.number}}'
          hasuraProjectDirectoryPath: ./hasura/app
          region: us-west-1
          tier: cloud_free_v2
          hasuraEnv: |
            HASURA_GRAPHQL_CORS_DOMAINS=*
            HASURA_GRAPHQL_DATABASE_URL=${{steps.create_branch.outputs.db_url}}/neondb
            HYGRAPH_CMS_WEBHOOK_READ_URL=${{secrets.HYGRAPH_CMS_WEBHOOK_READ_URL}}
            HYGRAPH_CMS_READ_TOKEN=${{secrets.HYGRAPH_CMS_READ_TOKEN}}
            HASURA_GRAPHQL_UNAUTHORIZED_ROLE=anonymous
            HASURA_GRAPHQL_ADMIN_SECRET=${{secrets.HASURA_GRAPHQL_ADMIN_SECRET}}
            HASURA_GRAPHQL_JWT_SECRET=${{secrets.HASURA_GRAPHQL_JWT_SECRET}}
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          HASURA_CLOUD_ACCESS_TOKEN: ${{secrets.HASURA_CLOUD_ACCESS_TOKEN}}

      - name: Set Hasura GraphQL endpoint to .env
        run: |
          echo HASURA_GRAPHQL_ENDPOINT=${{steps.hasura_cloud_preview.outputs.graphQLEndpoint}} >> .env
          echo NEXT_PUBLIC_HASURA_PROJECT_ENDPOINT=${{steps.hasura_cloud_preview.outputs.graphQLEndpoint}} >> .env

      - name: Build Vercel Project Artifacts
        run: vercel build --token=${{secrets.VERCEL_TOKEN}}

      - name: Deploy Preview to Vercel
        id: deploy_vercel
        run: |
          preview_url=$(vercel deploy --prebuilt --token=${{secrets.VERCEL_TOKEN}})
          echo "PREVIEW_URL=$preview_url" >> $GITHUB_ENV

      - name: Comment on Pull Request
        uses: thollander/actions-comment-pull-request@v2
        with:
          message: |
            Vercel Preview URL :rocket: : ${{env.PREVIEW_URL}}
            Neon branch :elephant: : https://console.neon.tech/app/projects/${{secrets.NEON_PROJECT_ID}}/branches/${{steps.create_branch.outputs.branch_id}}
            Hasura Console :computer: : ${{steps.hasura_cloud_preview.outputs.consoleURL}}

      - name: Save PREVIEW_URL as artifact
        run: echo ${{env.PREVIEW_URL}} > preview_url.txt

      - name: Upload PREVIEW_URL artifact
        uses: actions/upload-artifact@v2
        with:
          name: preview-url-${{env.PULL_REQUEST_SHA}}
          path: ./preview_url.txt

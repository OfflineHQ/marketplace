name: Nx Graph

on:
  workflow_run:
    workflows: [Install and cache dependencies]
    branches: [main]
    types:
      - completed
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  generate-static-site:
    environment:
      name: NX Graph Page
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Generate nx graph static site
      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false
      - name: Use the node_modules cache if available [pnpm]
        if: steps.package_manager.outputs.name == 'pnpm'
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-node-${{ steps.versions.outputs.node_version }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ steps.versions.outputs.node_version }}-
      - name: Get dependencies from cache
        run: pnpm install --frozen-lockfile
      - name: generate nx graph
        run: pnpm nx-graph-static
      - name: Setup Nx Graph Page
        uses: actions/configure-pages@v2.1.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: './static/nx-graph'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1

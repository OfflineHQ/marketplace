name: Setup
description: Setup Node.js, cache and install dependencies, and install Cypress binary
inputs:
  node-version:
    description: Node.js version
    required: false
    default: '16'
runs:
  using: composite
  steps:
    - name: Checkout all commits
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ inputs.node-version }}

    - uses: pnpm/action-setup@v2.0.1
      name: Install pnpm
      with:
        version: 7
        run_install: false

    - name: Get pnpm store directory
      id: pnpm-cache
      shell: bash
      run: |
        echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"
    - uses: actions/cache@v3
      name: Setup pnpm cache
      with:
        path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    # we use the exact restore key to avoid Cypress binary snowballing
    # https://glebbahmutov.com/blog/do-not-let-cypress-cache-snowball/
    # https://github.com/cypress-io/cypress-example-kitchensink/blob/0cf2a960fea4804271a9e5273d2ed8e246dd9e21/.github/workflows/parallel.yml#L1-L1
    - name: Cache Cypress binary
      uses: actions/cache@v3
      id: cache-cypress-binary
      with:
        path: ~/.cache/Cypress
        key: cypress-${{ runner.os }}-cypress-${{ github.ref }}-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          cypress-${{ runner.os }}-cypress-${{ github.ref }}-${{ hashFiles('**/pnpm-lock.yaml') }}

    - name: Install dependencies
      shell: bash
      run: pnpm install --frozen-lockfile --prefer-offline --ignore-scripts

    - name: Install Cypress binary if no cache hit
      if: steps.cache-cypress-binary.outputs.cache-hit != 'true'
      shell: bash
      run: pnpm cypress install

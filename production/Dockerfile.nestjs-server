FROM node:18-alpine as builder

## avoid nx build error because don't detect it's a ci environment
ENV NX_DAEMON=false
ENV NODE_ENV build
## set global npm path to node user
ENV NPM_CONFIG_PREFIX=/home/node/.npm-global
ENV PATH=$PATH:/home/node/.npm-global/bin
## trick to pass down PRISMA_DATABASE_URL to avoid prisma error when running prisma migration
ARG PRISMA_DATABASE_URL
ENV PRISMA_DATABASE_URL ${PRISMA_DATABASE_URL}

## add openssl for prisma
RUN apk add --no-cache openssl

USER node
WORKDIR /home/node

COPY --chown=node package.json pnpm-lock.yaml ./
RUN npm install -g pnpm && pnpm install --ignore-scripts

COPY --chown=node . .
RUN pnpm prisma generate && pnpm prisma migrate deploy && pnpm nx run nestjs-server:build --prod

FROM node:18-alpine

ENV NODE_ENV production

USER node
WORKDIR /home/node

COPY --from=builder /home/node/package*.json /home/node/
COPY --from=builder /home/node/node_modules/ /home/node/node_modules/
COPY --from=builder /home/node/dist/ /home/node/dist/

EXPOSE 3000

CMD ["node", "dist/apps/nestjs-server/main.js"]

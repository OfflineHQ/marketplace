mutation UpdateEventPassNftFromNftTransfer($updates: [eventPassNft_updates!]!) {
  update_eventPassNft_many(updates: $updates) {
    affected_rows
    returning {
      id
      isRevealed
      currentOwnerAddress
      eventId
      eventPassId
      organizerId
      tokenId
      lastNftTransfer {
        fromAddress
      }
    }
  }
}

mutation SetEventPassNftRevealed($id: uuid!) {
  update_eventPassNft_by_pk(
    pk_columns: { id: $id }
    _set: { isRevealed: true }
  ) {
    id
  }
}

mutation InsertEventPassNfts($objects : [eventPassNft_insert_input!]!) {
  insert_eventPassNft(objects: $objects) {
    affected_rows
    returning {
      contractAddress
			tokenId
			metadata
			error
			tokenUri
			chainId
			eventId
			eventPassId
			organizerId
			currentOwnerAddress
			lastNftTransferId
			isRevealed
			id
			created_at
			updated_at
    }
  }
}
    
    


query GetEvent($slug: String!, $locale: Locale!, $stage: Stage!) @cached {
  event(where: { slug: $slug }, locales: [$locale, en], stage: $stage) {
    ...EventListFields
    description {
      json
      references {
        ... on Asset {
          __typename
          id
          url
          mimeType
        }
      }
    }
    organizer {
      id
      slug
      name
      image {
        url
      }
      imageClasses
    }
    eventParameters {
      ...EventParametersMinimalFields
      dateSaleStart
      dateSaleEnd
      dateStart
      dateEnd
      timezone
    }
    eventDateLocations {
      ...EventDateLocationsFields
    }
  }
}

query GetEventWithPasses($slug: String!, $locale: Locale!, $stage: Stage!)
@cached {
  event(where: { slug: $slug }, locales: [$locale, en], stage: $stage) {
    id
    slug
    title
    heroImage {
      url
    }
    heroImageClasses
    organizer {
      ...OrganizerFields
    }
    eventDateLocations {
      ...EventDateLocationsFields
    }
    eventParameters {
      ...EventParametersFields
    }
    eventPasses {
      id
      name
      description
      passAmount {
        ...PassAmountFields
      }
      passPricing {
        ...PassPricingFields
      }
    }
  }
}

query GetEventsFromOrganizerIdTable($id: ID!, $locale: Locale!, $stage: Stage!)
@cached {
  organizer(where: { id: $id }, locales: [$locale, en], stage: $stage) {
    events {
      title
      slug
      eventParameters {
        dateStart
        dateEnd
        dateSaleStart
        dateSaleEnd
        timezone
        status
        isSaleOngoing
        isOngoing
      }
    }
  }
}

query GetEventWithPassesOrganizer(
  $slug: String!
  $locale: Locale!
  $stage: Stage!
) @cached {
  event(where: { slug: $slug }, locales: [$locale, en], stage: $stage) {
    title
    id
    slug
    eventPasses {
      name
      id
      description
      nftName
      nftImage {
        url
      }
      nftDescription
      passOptions {
        name
        description
        eventDateLocation {
          ...EventDateLocationsFields
        }
      }
      passAmount {
        ...PassAmountFields
      }
      passPricing {
        ...PassPricingFields
      }
      eventPassNftContract {
        type
        contractAddress
        eventPassId
        isDelayedRevealed
      }
      eventPassDelayedRevealed {
        name
        description
        nftName
        nftDescription
        nftImage {
          url
        }
        passOptions {
          name
          description
          eventDateLocation {
            ...EventDateLocationsFields
          }
        }
      }
    }
  }
}

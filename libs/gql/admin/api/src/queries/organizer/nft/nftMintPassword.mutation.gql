mutation InsertNftMintPassword($object: nftMintPassword_insert_input!) {
  insert_nftMintPassword_one(object: $object) {
    id
  }
}

mutation InsertNftMintPasswords($objects: [nftMintPassword_insert_input!]!) {
  insert_nftMintPassword(objects: $objects) {
    affected_rows
    returning {
      id
      password
      tokenId
      minterAddress
    }
  }
}

mutation UpdateNftMintPasswordMinter($id: uuid!, $minterAddress: String!) {
  update_nftMintPassword_by_pk(
    pk_columns: { id: $id }
    _set: { minterAddress: $minterAddress }
  ) {
    id
  }
}

mutation UpdateNftMintPasswordTokenId(
  $tokenId: bigint!
  $minterAddress: String!
  $contractAddress: String!
  $chainId: String!
) {
  update_nftMintPassword(
    where: {
      minterAddress: { _eq: $minterAddress }
      contractAddress: { _eq: $contractAddress }
      chainId: { _eq: $chainId }
    }
    _set: { tokenId: $tokenId }
  ) {
    returning {
      id
    }
  }
}
